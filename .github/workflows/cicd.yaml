name: CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
  IMAGE_NAME: ghcr.io/leekeon/nestjs-starter

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        #node-version: [14.x, 16.x, 18.x]
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    
    - name: check files
      run: |
        pwd
        ls -al
    
    - name: Get verion
      id: image
      run: |
        VERSION=$(echo ${{ github.sha }} | cut -c1-8)
        echo VERSION=$VERSION
        echo "::set-output name=version::$VERSION"
        
    # Container Registry에 로그인합니다.
    - name: Login to GitHub Packages Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/checkout@v3
      with:
        path: /opt
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ env.IMAGE_NAME }}:${{ steps.image.outputs.version }}
        
    # 애플리케이션을 이미지로 build 하고 push합니다.
    - name: Push to GitHub Packages
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:${{ steps.image.outputs.version }}
          
  deploy:
    runs-on: ubuntu-latest
    # build job 완료 후 진행
    needs: build

    steps:
      - name: Get verion
        id: image
        run: |
          VERSION=$(echo ${{ github.sha }} | cut -c1-8)
          echo VERSION=$VERSION
          echo "::set-output name=version::$VERSION"
